name: SignPath Windows Release

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build-and-sign:
    name: Build and Sign Windows EXE
    runs-on: ubuntu-latest

    env:
      SIGNPATH_API_TOKEN: ${{ secrets.SIGNPATH_API_TOKEN }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish Windows EXE
        run: dotnet publish ssh-c.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=true /p:EnableCompressionInSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o publish/win-x64

      - name: Install SignPath PowerShell module
        shell: pwsh
        run: |
          Install-Module -Name SignPath -RequiredVersion 4.4.1 -Force -Scope CurrentUser

      - name: Sign EXE via SignPath
        shell: pwsh
        run: |
          Import-Module SignPath
          Submit-SigningRequest `
            -InputArtifactPath "publish/win-x64/ssh-c.exe" `
            -ApiToken "$env:SIGNPATH_API_TOKEN" `
            -OrganizationId "7986306f-df77-4bb0-b011-dc2e6289232e" `
            -ProjectSlug "SSH-C" `
            -SigningPolicySlug "ssh-c_DEV_Release" `
            -OutputArtifactPath "publish/win-x64/ssh-c.signed.exe" `
            -WaitForCompletion

      - name: Replace original EXE with signed version
        run: |
          rm publish/win-x64/ssh-c.exe
          mv publish/win-x64/ssh-c.signed.exe publish/win-x64/ssh-c.exe

      - name: Generate SHA256 checksum
        run: sha256sum publish/win-x64/ssh-c.exe > publish/win-x64/ssh-c.exe.sha256

      - name: Upload Signed EXE and Checksum
        uses: actions/upload-artifact@v4
        with:
          name: ssh-c-windows-signed
          path: |
            publish/win-x64/ssh-c.exe
            publish/win-x64/ssh-c.exe.sha256